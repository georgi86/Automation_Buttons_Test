///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CheckButtons
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Recording1 recording.
    /// </summary>
    [TestModule("bdfdbcc7-b386-4a03-87f6-6cc3d24da697", ModuleType.Recording, 1)]
    public partial class Recording1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CheckButtonsRepository repository.
        /// </summary>
        public static CheckButtonsRepository repo = CheckButtonsRepository.Instance;

        static Recording1 instance = new Recording1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Recording1()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Recording1 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Just to open the SW
            Report.Log(ReportLevel.Info, "Mouse", "Just to open the SW\r\nMouse Left Click item 'SnapXUntitled.SnapXUntitled' at Center.", repo.SnapXUntitled.SnapXUntitledInfo, new RecordItemIndex(0));
            repo.SnapXUntitled.SnapXUntitled.Click();
            Delay.Milliseconds(200);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.Crosshair'.", repo.SnapXUntitled.ToolBar59392.CrosshairInfo, new RecordItemIndex(1));
                Validate.Attribute(repo.SnapXUntitled.ToolBar59392.CrosshairInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(1)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.Circle'.", repo.SnapXUntitled.ToolBar59392.CircleInfo, new RecordItemIndex(2));
                Validate.Attribute(repo.SnapXUntitled.ToolBar59392.CircleInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(2)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.Box'.", repo.SnapXUntitled.ToolBar59392.BoxInfo, new RecordItemIndex(3));
                Validate.Attribute(repo.SnapXUntitled.ToolBar59392.BoxInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(3)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.Protractor'.", repo.SnapXUntitled.ToolBar59392.ProtractorInfo, new RecordItemIndex(4));
                Validate.Attribute(repo.SnapXUntitled.ToolBar59392.ProtractorInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(4)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.DoubleCircle'.", repo.SnapXUntitled.ToolBar59392.DoubleCircleInfo, new RecordItemIndex(5));
                Validate.Attribute(repo.SnapXUntitled.ToolBar59392.DoubleCircleInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.MicroGage'.", repo.SnapXUntitled.ToolBar59392.MicroGageInfo, new RecordItemIndex(6));
                Validate.Attribute(repo.SnapXUntitled.ToolBar59392.MicroGageInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.RadiusChart'.", repo.SnapXUntitled.ToolBar59392.RadiusChartInfo, new RecordItemIndex(7));
                Validate.Attribute(repo.SnapXUntitled.ToolBar59392.RadiusChartInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(7)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.GridChart'.", repo.SnapXUntitled.ToolBar59392.GridChartInfo, new RecordItemIndex(8));
                Validate.Attribute(repo.SnapXUntitled.ToolBar59392.GridChartInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(8)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.CombinationChart'.", repo.SnapXUntitled.ToolBar59392.CombinationChartInfo, new RecordItemIndex(9));
                Validate.Attribute(repo.SnapXUntitled.ToolBar59392.CombinationChartInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(9)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.Multiple'.", repo.SnapXUntitled.ToolBar59392.MultipleInfo, new RecordItemIndex(10));
                Validate.Attribute(repo.SnapXUntitled.ToolBar59392.MultipleInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(10)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.PointEntry'.", repo.SnapXUntitled.ToolBar59392.PointEntryInfo, new RecordItemIndex(11));
                Validate.Attribute(repo.SnapXUntitled.ToolBar59392.PointEntryInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(11)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.Focus'.", repo.SnapXUntitled.ToolBar59392.FocusInfo, new RecordItemIndex(12));
                Validate.Attribute(repo.SnapXUntitled.ToolBar59392.FocusInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(12)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593921.FeatureFinder'.", repo.SnapXUntitled.ToolBar593921.FeatureFinderInfo, new RecordItemIndex(13));
                Validate.Attribute(repo.SnapXUntitled.ToolBar593921.FeatureFinderInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(13)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593921.MinimumWeekEdge'.", repo.SnapXUntitled.ToolBar593921.MinimumWeekEdgeInfo, new RecordItemIndex(14));
                Validate.Attribute(repo.SnapXUntitled.ToolBar593921.MinimumWeekEdgeInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(14)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593921.AverageWeekEdge'.", repo.SnapXUntitled.ToolBar593921.AverageWeekEdgeInfo, new RecordItemIndex(15));
                Validate.Attribute(repo.SnapXUntitled.ToolBar593921.AverageWeekEdgeInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(15)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593921.MaximumWeekEdge'.", repo.SnapXUntitled.ToolBar593921.MaximumWeekEdgeInfo, new RecordItemIndex(16));
                Validate.Attribute(repo.SnapXUntitled.ToolBar593921.MaximumWeekEdgeInfo, "Enabled", "True", Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(16)); }
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593921.Contour'.", repo.SnapXUntitled.ToolBar593921.ContourInfo, new RecordItemIndex(17));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593921.ContourInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593921.StrongEdge'.", repo.SnapXUntitled.ToolBar593921.StrongEdgeInfo, new RecordItemIndex(18));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593921.StrongEdgeInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593921.Centroid'.", repo.SnapXUntitled.ToolBar593921.CentroidInfo, new RecordItemIndex(19));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593921.CentroidInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593921.AdvancedCentroid'.", repo.SnapXUntitled.ToolBar593921.AdvancedCentroidInfo, new RecordItemIndex(20));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593921.AdvancedCentroidInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593922.MeasurePoint'.", repo.SnapXUntitled.ToolBar593922.MeasurePointInfo, new RecordItemIndex(21));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593922.MeasurePointInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593922.MeasureLine'.", repo.SnapXUntitled.ToolBar593922.MeasureLineInfo, new RecordItemIndex(22));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593922.MeasureLineInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593922.MeasureCircle'.", repo.SnapXUntitled.ToolBar593922.MeasureCircleInfo, new RecordItemIndex(23));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593922.MeasureCircleInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593922.MeasureMidpoint'.", repo.SnapXUntitled.ToolBar593922.MeasureMidpointInfo, new RecordItemIndex(24));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593922.MeasureMidpointInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593922.MeasureDistance'.", repo.SnapXUntitled.ToolBar593922.MeasureDistanceInfo, new RecordItemIndex(25));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593922.MeasureDistanceInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593922.MeasureCentroid'.", repo.SnapXUntitled.ToolBar593922.MeasureCentroidInfo, new RecordItemIndex(26));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593922.MeasureCentroidInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593922.MeasureCentroid'.", repo.SnapXUntitled.ToolBar593922.MeasureCentroidInfo, new RecordItemIndex(27));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593922.MeasureCentroidInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593922.MeasureContour'.", repo.SnapXUntitled.ToolBar593922.MeasureContourInfo, new RecordItemIndex(28));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593922.MeasureContourInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593922.MeasureMinMaxAvg'.", repo.SnapXUntitled.ToolBar593922.MeasureMinMaxAvgInfo, new RecordItemIndex(29));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593922.MeasureMinMaxAvgInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593923.ConstructIntersection'.", repo.SnapXUntitled.ToolBar593923.ConstructIntersectionInfo, new RecordItemIndex(30));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593923.ConstructIntersectionInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593923.ConstructWidth'.", repo.SnapXUntitled.ToolBar593923.ConstructWidthInfo, new RecordItemIndex(31));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593923.ConstructWidthInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593923.ConstructCircle'.", repo.SnapXUntitled.ToolBar593923.ConstructCircleInfo, new RecordItemIndex(32));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593923.ConstructCircleInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593923.ConstructPoint'.", repo.SnapXUntitled.ToolBar593923.ConstructPointInfo, new RecordItemIndex(33));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593923.ConstructPointInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593923.ConstructLine'.", repo.SnapXUntitled.ToolBar593923.ConstructLineInfo, new RecordItemIndex(34));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593923.ConstructLineInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593923.ConstructDistance'.", repo.SnapXUntitled.ToolBar593923.ConstructDistanceInfo, new RecordItemIndex(35));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593923.ConstructDistanceInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593923.ConstructMidpoint'.", repo.SnapXUntitled.ToolBar593923.ConstructMidpointInfo, new RecordItemIndex(36));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593923.ConstructMidpointInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593923.ConstructUserInput'.", repo.SnapXUntitled.ToolBar593923.ConstructUserInputInfo, new RecordItemIndex(37));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593923.ConstructUserInputInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593923.ConstructMath'.", repo.SnapXUntitled.ToolBar593923.ConstructMathInfo, new RecordItemIndex(38));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593923.ConstructMathInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593923.ConstructBranch'.", repo.SnapXUntitled.ToolBar593923.ConstructBranchInfo, new RecordItemIndex(39));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593923.ConstructBranchInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593923.ConstructMinMaxAvg'.", repo.SnapXUntitled.ToolBar593923.ConstructMinMaxAvgInfo, new RecordItemIndex(40));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593923.ConstructMinMaxAvgInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593923.ConstructContour'.", repo.SnapXUntitled.ToolBar593923.ConstructContourInfo, new RecordItemIndex(41));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593923.ConstructContourInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593923.ConstructGageB_all'.", repo.SnapXUntitled.ToolBar593923.ConstructGageB_allInfo, new RecordItemIndex(42));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593923.ConstructGageB_allInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar593923.ConstructGageDiameter'.", repo.SnapXUntitled.ToolBar593923.ConstructGageDiameterInfo, new RecordItemIndex(43));
            Validate.Attribute(repo.SnapXUntitled.ToolBar593923.ConstructGageDiameterInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.DatumOrigin'.", repo.SnapXUntitled.ToolBar59392.DatumOriginInfo, new RecordItemIndex(44));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.DatumOriginInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.DatumAlign'.", repo.SnapXUntitled.ToolBar59392.DatumAlignInfo, new RecordItemIndex(45));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.DatumAlignInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.DatumRecall'.", repo.SnapXUntitled.ToolBar59392.DatumRecallInfo, new RecordItemIndex(46));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.DatumRecallInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.AutoCorrelation'.", repo.SnapXUntitled.ToolBar59392.AutoCorrelationInfo, new RecordItemIndex(47));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.AutoCorrelationInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.GOButton'.", repo.SnapXUntitled.GOButtonInfo, new RecordItemIndex(48));
            Validate.Attribute(repo.SnapXUntitled.GOButtonInfo, "Enabled", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.GoToInitialState'.", repo.SnapXUntitled.GoToInitialStateInfo, new RecordItemIndex(49));
            Validate.Attribute(repo.SnapXUntitled.GoToInitialStateInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'SnapXUntitled.GoToInitialState'.", repo.SnapXUntitled.GoToInitialStateInfo, new RecordItemIndex(50));
            Validate.Attribute(repo.SnapXUntitled.GoToInitialStateInfo, "Text", "");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.SetInitialState'.", repo.SnapXUntitled.SetInitialStateInfo, new RecordItemIndex(51));
            Validate.Attribute(repo.SnapXUntitled.SetInitialStateInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'SnapXUntitled.SetInitialState'.", repo.SnapXUntitled.SetInitialStateInfo, new RecordItemIndex(52));
            Validate.Attribute(repo.SnapXUntitled.SetInitialStateInfo, "Text", "");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.NewRoutineButton'.", repo.SnapXUntitled.ToolBar59392.NewRoutineButtonInfo, new RecordItemIndex(53));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.NewRoutineButtonInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='New') on item 'SnapXUntitled.ToolBar59392.NewRoutineButton'.", repo.SnapXUntitled.ToolBar59392.NewRoutineButtonInfo, new RecordItemIndex(54));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.NewRoutineButtonInfo, "Text", "New");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.AutoIDSearch'.", repo.SnapXUntitled.ToolBar59392.AutoIDSearchInfo, new RecordItemIndex(55));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.AutoIDSearchInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='AutoID') on item 'SnapXUntitled.ToolBar59392.AutoIDSearch'.", repo.SnapXUntitled.ToolBar59392.AutoIDSearchInfo, new RecordItemIndex(56));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.AutoIDSearchInfo, "Text", "AutoID");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.OpenRoutine'.", repo.SnapXUntitled.ToolBar59392.OpenRoutineInfo, new RecordItemIndex(57));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.OpenRoutineInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Open') on item 'SnapXUntitled.ToolBar59392.OpenRoutine'.", repo.SnapXUntitled.ToolBar59392.OpenRoutineInfo, new RecordItemIndex(58));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.OpenRoutineInfo, "Text", "Open");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.AutoIDRun'.", repo.SnapXUntitled.ToolBar59392.AutoIDRunInfo, new RecordItemIndex(59));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.AutoIDRunInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='AutoID Run') on item 'SnapXUntitled.ToolBar59392.AutoIDRun'.", repo.SnapXUntitled.ToolBar59392.AutoIDRunInfo, new RecordItemIndex(60));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.AutoIDRunInfo, "Text", "AutoID Run");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.SwitchToFFW'.", repo.SnapXUntitled.ToolBar59392.SwitchToFFWInfo, new RecordItemIndex(61));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.SwitchToFFWInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.Container59649.Xbutton'.", repo.SnapXUntitled.Container59649.XbuttonInfo, new RecordItemIndex(62));
            Validate.Attribute(repo.SnapXUntitled.Container59649.XbuttonInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.Container59649.Ybutton'.", repo.SnapXUntitled.Container59649.YbuttonInfo, new RecordItemIndex(63));
            Validate.Attribute(repo.SnapXUntitled.Container59649.YbuttonInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.Container59649.Zbutton'.", repo.SnapXUntitled.Container59649.ZbuttonInfo, new RecordItemIndex(64));
            Validate.Attribute(repo.SnapXUntitled.Container59649.ZbuttonInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.Container59649.Align'.", repo.SnapXUntitled.Container59649.AlignInfo, new RecordItemIndex(65));
            Validate.Attribute(repo.SnapXUntitled.Container59649.AlignInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.Container59649.MoveStage'.", repo.SnapXUntitled.Container59649.MoveStageInfo, new RecordItemIndex(66));
            Validate.Attribute(repo.SnapXUntitled.Container59649.MoveStageInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.Container59649.EnterButton'.", repo.SnapXUntitled.Container59649.EnterButtonInfo, new RecordItemIndex(67));
            Validate.Attribute(repo.SnapXUntitled.Container59649.EnterButtonInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.Container59649.StartStopButton'.", repo.SnapXUntitled.Container59649.StartStopButtonInfo, new RecordItemIndex(68));
            Validate.Attribute(repo.SnapXUntitled.Container59649.StartStopButtonInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.Container59649.Units'.", repo.SnapXUntitled.Container59649.UnitsInfo, new RecordItemIndex(69));
            Validate.Attribute(repo.SnapXUntitled.Container59649.UnitsInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.Container59649.CoordinateSystem'.", repo.SnapXUntitled.Container59649.CoordinateSystemInfo, new RecordItemIndex(70));
            Validate.Attribute(repo.SnapXUntitled.Container59649.CoordinateSystemInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.SomeButton'.", repo.SnapXUntitled.SomeButtonInfo, new RecordItemIndex(71));
            Validate.Attribute(repo.SnapXUntitled.SomeButtonInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.OpenImage'.", repo.SnapXUntitled.ToolBar59392.OpenImageInfo, new RecordItemIndex(72));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.OpenImageInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Open Image') on item 'SnapXUntitled.ToolBar59392.OpenImage'.", repo.SnapXUntitled.ToolBar59392.OpenImageInfo, new RecordItemIndex(73));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.OpenImageInfo, "Text", "Open Image");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.SaveImage'.", repo.SnapXUntitled.ToolBar59392.SaveImageInfo, new RecordItemIndex(74));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.SaveImageInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Save Image') on item 'SnapXUntitled.ToolBar59392.SaveImage'.", repo.SnapXUntitled.ToolBar59392.SaveImageInfo, new RecordItemIndex(75));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.SaveImageInfo, "Text", "Save Image");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.SaveImageAndTarget'.", repo.SnapXUntitled.ToolBar59392.SaveImageAndTargetInfo, new RecordItemIndex(76));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.SaveImageAndTargetInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Save Image and Target') on item 'SnapXUntitled.ToolBar59392.SaveImageAndTarget'.", repo.SnapXUntitled.ToolBar59392.SaveImageAndTargetInfo, new RecordItemIndex(77));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.SaveImageAndTargetInfo, "Text", "Save Image and Target");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.SaveFullScreen'.", repo.SnapXUntitled.ToolBar59392.SaveFullScreenInfo, new RecordItemIndex(78));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.SaveFullScreenInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Save Full Screen') on item 'SnapXUntitled.ToolBar59392.SaveFullScreen'.", repo.SnapXUntitled.ToolBar59392.SaveFullScreenInfo, new RecordItemIndex(79));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.SaveFullScreenInfo, "Text", "Save Full Screen");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.PrintImage'.", repo.SnapXUntitled.ToolBar59392.PrintImageInfo, new RecordItemIndex(80));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.PrintImageInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Print Image') on item 'SnapXUntitled.ToolBar59392.PrintImage'.", repo.SnapXUntitled.ToolBar59392.PrintImageInfo, new RecordItemIndex(81));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.PrintImageInfo, "Text", "Print Image");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.PrintImageAndTarget'.", repo.SnapXUntitled.ToolBar59392.PrintImageAndTargetInfo, new RecordItemIndex(82));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.PrintImageAndTargetInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Print Image and Target') on item 'SnapXUntitled.ToolBar59392.PrintImageAndTarget'.", repo.SnapXUntitled.ToolBar59392.PrintImageAndTargetInfo, new RecordItemIndex(83));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.PrintImageAndTargetInfo, "Text", "Print Image and Target");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.PrintFullScreen'.", repo.SnapXUntitled.ToolBar59392.PrintFullScreenInfo, new RecordItemIndex(84));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.PrintFullScreenInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Print Full Screen') on item 'SnapXUntitled.ToolBar59392.PrintFullScreen'.", repo.SnapXUntitled.ToolBar59392.PrintFullScreenInfo, new RecordItemIndex(85));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.PrintFullScreenInfo, "Text", "Print Full Screen");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.TargetColor'.", repo.SnapXUntitled.ToolBar59392.TargetColorInfo, new RecordItemIndex(86));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.TargetColorInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Target Color') on item 'SnapXUntitled.ToolBar59392.TargetColor'.", repo.SnapXUntitled.ToolBar59392.TargetColorInfo, new RecordItemIndex(87));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.TargetColorInfo, "Text", "Target Color");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.ZoomOut'.", repo.SnapXUntitled.ToolBar59392.ZoomOutInfo, new RecordItemIndex(88));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.ZoomOutInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Zoom Out') on item 'SnapXUntitled.ToolBar59392.ZoomOut'.", repo.SnapXUntitled.ToolBar59392.ZoomOutInfo, new RecordItemIndex(89));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.ZoomOutInfo, "Text", "Zoom Out");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.ButtonLow'.", repo.SnapXUntitled.ToolBar59392.ButtonLowInfo, new RecordItemIndex(90));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.ButtonLowInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.High'.", repo.SnapXUntitled.ToolBar59392.HighInfo, new RecordItemIndex(91));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.HighInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.ZoomIn'.", repo.SnapXUntitled.ToolBar59392.ZoomInInfo, new RecordItemIndex(92));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.ZoomInInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Zoom In') on item 'SnapXUntitled.ToolBar59392.ZoomIn'.", repo.SnapXUntitled.ToolBar59392.ZoomInInfo, new RecordItemIndex(93));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.ZoomInInfo, "Text", "Zoom In");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.Text33212'.", repo.SnapXUntitled.ToolBar59392.Text33212Info, new RecordItemIndex(94));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.Text33212Info, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.ImageColor'.", repo.SnapXUntitled.ToolBar59392.ImageColorInfo, new RecordItemIndex(95));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.ImageColorInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Image Color') on item 'SnapXUntitled.ToolBar59392.ImageColor'.", repo.SnapXUntitled.ToolBar59392.ImageColorInfo, new RecordItemIndex(96));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.ImageColorInfo, "Text", "Image Color");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.DisplayModelOverlay'.", repo.SnapXUntitled.ToolBar59392.DisplayModelOverlayInfo, new RecordItemIndex(97));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.DisplayModelOverlayInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.DisplayLabelsAll'.", repo.SnapXUntitled.ToolBar59392.DisplayLabelsAllInfo, new RecordItemIndex(98));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.DisplayLabelsAllInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.DisplayLabels'.", repo.SnapXUntitled.ToolBar59392.DisplayLabelsInfo, new RecordItemIndex(99));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.DisplayLabelsInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.DisplayLablesPrintSelected'.", repo.SnapXUntitled.ToolBar59392.DisplayLablesPrintSelectedInfo, new RecordItemIndex(100));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.DisplayLablesPrintSelectedInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.DisplayLabelsToleranced'.", repo.SnapXUntitled.ToolBar59392.DisplayLabelsTolerancedInfo, new RecordItemIndex(101));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.DisplayLabelsTolerancedInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.Actuals'.", repo.SnapXUntitled.ToolBar59392.ActualsInfo, new RecordItemIndex(102));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.ActualsInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.Nominals'.", repo.SnapXUntitled.ToolBar59392.NominalsInfo, new RecordItemIndex(103));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.NominalsInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.Points'.", repo.SnapXUntitled.ToolBar59392.PointsInfo, new RecordItemIndex(104));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.PointsInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.ShowCAD'.", repo.SnapXUntitled.ToolBar59392.ShowCADInfo, new RecordItemIndex(105));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.ShowCADInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.ShowHiddenFeatures'.", repo.SnapXUntitled.ToolBar59392.ShowHiddenFeaturesInfo, new RecordItemIndex(106));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.ShowHiddenFeaturesInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.FixtureMask'.", repo.SnapXUntitled.ToolBar59392.FixtureMaskInfo, new RecordItemIndex(107));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.FixtureMaskInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'SnapXUntitled.ToolBar59392.CreateFixtureMask'.", repo.SnapXUntitled.ToolBar59392.CreateFixtureMaskInfo, new RecordItemIndex(108));
            Validate.Attribute(repo.SnapXUntitled.ToolBar59392.CreateFixtureMaskInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
